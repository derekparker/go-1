diff --git a/src/crypto/internal/backend/openssl.go b/src/crypto/internal/backend/openssl.go
index 49bb6da477..69e29d3528 100644
--- a/src/crypto/internal/backend/openssl.go
+++ b/src/crypto/internal/backend/openssl.go
@@ -11,16 +11,64 @@
 package backend
 
 import (
-	"os"
+	"crypto/internal/boring/sig"
 	"github.com/golang-fips/openssl/v2"
+	"os"
+	"syscall"
 )
 
 // Enabled controls whether FIPS crypto is enabled.
 var enabled bool
 
+var knownVersions = [...]string{"3", "1.1", "11", "111", "1.0.2", "1.0.0", "10"}
+
 func init() {
-	strictFIPSOpenSSLRuntimeCheck()
-	enabled = openssl.FIPS()
+	version, _ := syscall.Getenv("GO_OPENSSL_VERSION_OVERRIDE")
+	if version == "" {
+		var fallbackVersion string
+		for _, v := range knownVersions {
+			exists, fips := openssl.CheckVersion(v)
+			if exists && fips {
+				version = v
+				break
+			}
+			if exists && fallbackVersion == "" {
+				fallbackVersion = v
+			}
+		}
+		if version == "" && fallbackVersion != "" {
+			version = fallbackVersion
+		}
+	}
+	if err := openssl.Init(version); err != nil {
+		panic("opensslcrypto: can't initialize OpenSSL " + version + ": " + err.Error())
+	}
+	// 0: FIPS opt-out: abort the process if it is enabled and can't be disabled.
+	// 1: FIPS required: abort the process if it is not enabled and can't be enabled.
+	// other values: do not override OpenSSL configured FIPS mode.
+	var fips string
+	if v, ok := syscall.Getenv("GOLANG_FIPS"); ok {
+		fips = v
+	} else if hostFIPSModeEnabled() {
+		// System configuration can only force FIPS mode.
+		fips = "1"
+	}
+	switch fips {
+	case "0":
+		if openssl.FIPS() {
+			if err := openssl.SetFIPS(false); err != nil {
+				panic("opensslcrypto: can't disable FIPS mode for " + openssl.VersionText() + ": " + err.Error())
+			}
+		}
+	case "1":
+		if !openssl.FIPS() {
+			if err := openssl.SetFIPS(true); err != nil {
+				panic("opensslcrypto: can't enable FIPS mode for " + openssl.VersionText() + ": " + err.Error())
+			}
+			enabled = true
+		}
+	}
+	sig.BoringCrypto()
 }
 
 func Enabled() bool {
@@ -61,8 +109,6 @@ func UnreachableExceptTests() {
 	}
 }
 
-
-
 const RandReader = openssl.RandReader
 
 var NewGCMTLS = openssl.NewGCMTLS
